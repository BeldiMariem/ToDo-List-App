pipeline {
    agent any

    options {
        skipStagesAfterUnstable()
        timestamps()
    }

    triggers {
        githubPush() 
    }

    environment {
        MAVEN_OPTS = "-Dmaven.test.failure.ignore=false"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('Unit Tests') {
            steps {
                sh 'mvn test -Dspring.profiles.active=test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

        stage('Package') {
            when {
                branch pattern: "dev|recette|main", comparator: "REGEXP"
            }
            steps {
                sh 'mvn package -DskipTests'
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            }
        }

        stage('Deploy to Dev') {
            when {
                branch 'dev'
            }
            steps {
                echo "Deploying to Dev environment..."
                sh './scripts/deploy-dev.sh'
            }
        }

        stage('Deploy to Recette') {
            when {
                branch 'release'
            }
            steps {
                echo "Deploying to Release (staging) environment..."
                sh './scripts/deploy-release.sh'
            }
        }

        stage('Deploy to Production') {
            when {
                branch 'main'
            }
            steps {
                echo "Deploying to Production..."
                sh './scripts/deploy-prod.sh'
            }
        }

        stage('Publish to Nexus') {
            when {
                branch 'main'
            }
            steps {
                sh 'mvn deploy -DskipTests'
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline completed successfully!"
        }
        failure {
            echo "❌ Pipeline failed. Please check logs."
        }
    }
}
