pipeline {
    agent {
        docker {
            image 'maven:3.9.3-eclipse-temurin-21' 
            args '-v $HOME/.m2:/root/.m2' 
        }
    }

    environment {
        DOCKER_IMAGE = 'mariem19/todo_backend'
        APP_DIR = 'todo-backend'
    }

    options {
        timestamps()
        buildDiscarder(logRotator(daysToKeepStr: '30', numToKeepStr: '10'))
    }

    triggers {
        githubPush() 
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                dir("${APP_DIR}") {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Unit Tests') {
            steps {
                dir("${APP_DIR}") {
                    sh 'mvn test -Dspring.profiles.active=test'
                }
            }
            post {
                always {
                    junit "${APP_DIR}/target/surefire-reports/*.xml"
                }
            }
        }


        stage('Deploy to Nexus') {
            when {
                branch 'main'
            }
            steps {
                dir("${APP_DIR}") {
                    withMaven(mavenSettingsConfig: 'maven-settings') {
                        sh 'mvn deploy -DskipTests'
                    }
                }
            }
        }

        stage('Docker Build & Push') {
            when {
                branch 'main'
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo \$DOCKER_PASS | docker login -u \$DOCKER_USER --password-stdin
                        docker build -t ${DOCKER_IMAGE}:latest ./${APP_DIR}
                        docker push ${DOCKER_IMAGE}:latest
                    """
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo '✅ Backend build & deployment successful!'
        }
        failure {
            echo '❌ Something went wrong with the backend pipeline.'
        }
    }
}
