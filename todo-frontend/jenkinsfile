pipeline {
    agent any
    tools {
        nodejs "NodeJS20"   
    }
    environment {
        DOCKER_IMAGE = "mariem19/todo_frontend"
        AWS_ECR_IMAGE = "${env.AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/todo-frontend"
        CLUSTER_NAME = "todo-cluster"
        SERVICE_NAME = "frontend-service"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM',
                  branches: [[name: '*/main']],
                  userRemoteConfigs: [[url: 'https://github.com/BeldiMariem/ToDo-List-App.git']]
                ])
            }
        }
        
        stage('Install Dependencies') {
            steps {
                dir("todo-frontend") {
                    sh 'npm install' 
                }
            }
        }

        stage('Lint') {
            steps {
                dir("todo-frontend") {
                    sh 'npm run lint'
                }
            }
        }

        stage('Test') {
            steps {
                dir("todo-frontend") {
                    sh 'npm run test -- --watch=false --browsers=ChromeHeadless'
                     sh 'npm run cypress:run'
                }
            }
        }

        stage('Build Angular') {
            steps {
                dir("todo-frontend") {
                    sh 'npx ng build --configuration production'
                }
            }
        }
        
        stage('Docker Build & Push to DockerHub') {
            when {
                branch 'main'
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo \$DOCKER_PASS | docker login -u \$DOCKER_USER --password-stdin
                        docker build -t ${DOCKER_IMAGE}:latest ./todo-frontend
                        docker push ${DOCKER_IMAGE}:latest
                    """
                }
            }
        }
    stage('Build & Push to AWS ECR') {
            when {
                branch 'main'
            }
            steps {
                withAWS(credentials: 'aws-credentials', region: 'us-east-1') {
                    sh """
                        # Login to ECR
                        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${env.AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com
                        
                        # Build and tag for ECR
                        docker build -t ${AWS_ECR_IMAGE}:latest ./todo-frontend
                        docker push ${AWS_ECR_IMAGE}:latest
                    """
                }
            }
        }

        stage('Deploy to ECS') {
            when {
                branch 'main'
            }
            steps {
                withAWS(credentials: 'aws-credentials', region: 'us-east-1') {
                    sh """
                        # Force new deployment
                        aws ecs update-service \
                            --cluster ${CLUSTER_NAME} \
                            --service ${SERVICE_NAME} \
                            --force-new-deployment
                        
                        # Wait for deployment to stabilize
                        echo "Waiting for deployment to complete..."
                        aws ecs wait services-stable \
                            --cluster ${CLUSTER_NAME} \
                            --services ${SERVICE_NAME}
                    """
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Frontend pipeline completed successfully!'
            echo 'üåê Frontend URL: http://todo-app-alb-911217416.us-east-1.elb.amazonaws.com'

        }
        failure {
            echo '‚ùå Frontend pipeline failed. Please check logs.'
        }
    }
}
